syntax = "proto3";

package Network;

message Packet {
  enum PacketID {
    Invalid = 0;
    SyncBoardMessage = 1;
    RequestUpdatesMessage = 2;
    UberStateUpdateMessage = 3;
    SyncBingoUniversesMessage = 4;
    InitGameSyncMessage = 5;
    PrintTextMessage_Deprecated = 6;
    UberStateBatchUpdateMessage = 7;
    MultiverseInfoMessage = 8;
    AuthenticateMessage = 9;
    PlayerPositionMessage = 10;
    UpdatePlayerPositionMessage = 11;
    AuthenticatedMessage = 12;
    PrintTextMessage = 13;
    PrintPickupMessage = 14;
    RequestSeedMessage = 15;
    SetSeedMessage = 16;
    PlayerUseCatchingAbility = 17;
    PlayerUsedCatchingAbility = 18;
    PlayerCaught = 19;
    UpdatePlayerWorldPositionMessage = 21;
    UpdatePlayerMapPositionMessage = 22;
    ResourceRequestMessage = 23;
    PlayerTeleportMessage = 24;
    ReportInGameTimeMessage = 25;
    SetBlockStartingNewGameMessage = 26;
    ReportPlayerRaceReadyMessage = 27;
    SetPlayerSaveGuidMessage = 28;
    SetSaveGuidRestrictionsMessage = 29;
    OverrideInGameTimeMessage = 30;
    SetGameDifficultySettingsOverridesMessage = 32;

    TrackerUpdate = 100;
    ResetTracker = 101;
    TrackerFlagsUpdate = 102;
    RequestFullUpdate = 103;
    SetTrackerEndpointId = 104;

    NotifyTeleport = 500;
  }

  PacketID id = 1;
  bytes packet = 2;
}

message UberStateBatchUpdateMessage {
  repeated UberStateUpdateMessage updates = 1;
  bool resetBeforeApplying = 2;
}

message UberStateUpdateMessage {
  UberId state = 1;
  double value = 2;
}

message UberId {
  int32 group = 1;
  int32 state = 2;
}

message MoodGuid {
  int32 a = 1;
  int32 b = 2;
  int32 c = 3;
  int32 d = 4;
}

message SetSaveGuidRestrictionsMessage {
  optional MoodGuid playerSaveGuid = 1;
  bool shouldRestrictSaveGuid = 2;
}

message GameDifficultySettings {
  enum Setting {
    Allow = 0;
    Warn = 1;
    Deny = 2;
  }

  Setting easy = 1;
  Setting normal = 2;
  Setting hard = 3;
}

message SetGameDifficultySettingsOverridesMessage {
  optional GameDifficultySettings overrides = 1;
}

message InitGameSyncMessage {
  repeated UberId uberId = 1;
  bool blockStartingNewGame = 2;
  SetSaveGuidRestrictionsMessage saveGuidRestrictions = 3;
  bool preventCheats = 4;
  SetGameDifficultySettingsOverridesMessage gameDifficultySettingsOverrides = 5;
}

message SetPlayerSaveGuidMessage {
  MoodGuid playerSaveGuid = 1;
}

message Vector2 {
  float x = 1;
  float y = 2;
}

message PrintTextMessage {
  string text = 1;
  Vector2 position = 2;
  optional int32 id = 3;
  optional float time = 4;
  int32 coordinateSystem = 5;
  float fadeInLength = 6;
  float fadeOutLength = 7;
  int32 alignment = 8;
  int32 horizontalAnchor = 9;
  int32 verticalAnchor = 10;
  bool withSound = 11;
  bool withBox = 12;
  optional string queue = 13;
  bool prioritized = 14;
}

message PrintPickupMessage {
  float time = 1;
  string text = 2;
  bool prioritized = 3;
  optional Vector2 pickupPosition = 4;
}

message AuthenticateMessage {
  string jwt = 1;
  string client_version = 2;
}

message AuthenticatedMessage {
  UserInfo user = 1;
  int32 udpId = 2;
  bytes udpKey = 3;
}

message RequestSeedMessage {
  bool init = 1;
}

message SetSeedMessage {
  string seed_content = 1;
}

message PlayerPositionMessage  {
  float x = 1;
  float y = 2;
  bytes ghostFrameData = 3;
}

message UpdatePlayerPositionMessage  {
  string playerId = 1;
  float x = 2;
  float y = 3;
  bytes ghostFrameData = 4;
}

message UpdatePlayerMapPositionMessage  {
  string playerId = 1;
  float x = 2;
  float y = 3;
}

message UpdatePlayerWorldPositionMessage  {
  string playerId = 1;
  float x = 2;
  float y = 3;
  bytes ghostFrameData = 4;
}

message UserInfo {
  string id = 1;
  string name = 2;
  optional string avatarId = 3;
}

message WorldMembershipInfo {
  int64 id = 1;
  UserInfo user = 2;
}

message WorldInfo {
  int64 id = 1;
  string name = 2;
  string color = 3;
  repeated WorldMembershipInfo memberships = 4;
  optional int64 seedId = 5;
}

message UniverseInfo {
  int64 id = 1;
  string name = 2;
  string color = 3;
  repeated WorldInfo worlds = 4;
}

message MultiverseInfoMessage {
  enum GameHandlerType {
    Normal = 0;
    League = 3;
  }

  int64 id = 1;
  repeated UniverseInfo universes = 2;
  bool hasBingoBoard = 3;
  repeated UserInfo spectators = 4;
  optional int64 seedGroupId = 5;
  GameHandlerType handlerType = 6;
  bytes handlerInfo = 7;

  repeated string connectedUserIds = 12;
  repeated string raceReadyUserIds = 13;
}

message SeekerWorldInfo {
  int64 id = 1;
  float radius = 2;
  float cooldown = 3;
}

message HideAndSeekGameHandlerClientInfo {
  repeated SeekerWorldInfo seekerWorlds = 1;
}

message InfectedWorldInfo {
  int64 id = 1;
  float radius = 2;
  float cooldown = 3;
}

message InfectionGameHandlerClientInfo {
  repeated InfectedWorldInfo infectedWorlds = 1;
}

message PlayerUseCatchingAbilityMessage {}

message PlayerUsedCatchingAbilityMessage {
  string id = 1;
}

message PlayerCaughtMessage {
  string id = 1;
}

message UdpPacket {
  optional int32 udpId = 1;
  bytes encryptedPacket = 2;
}

message SpendResourceTarget {
  enum UpdateCondition {
    UpdateIfLarger = 0;
    UpdateIfSmaller = 1;
    UpdateIfDifferent = 2;
  }

  UberId uberId = 1;
  double value = 2;
  UpdateCondition updateIf = 3;
}

message ResourceRequestMessage {
  UberId resourceUberId = 1;
  bool relative = 2;
  int32 amount = 3;
  optional SpendResourceTarget target = 4;
}

message PlayerTeleportMessage {}

message ReportInGameTimeMessage {
  float in_game_time = 1;
  bool is_finished = 2;
}

message OverrideInGameTimeMessage {
  float in_game_time = 1;
}

message SetBlockStartingNewGameMessage {
  bool blockStartingNewGame = 1;
}

message ReportPlayerRaceReadyMessage {
  bool raceReady = 1;
}
